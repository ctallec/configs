# vim:fdm=marker

# --------------------------------------------------
# TMUX Configuration
# --------------------------------------------------
set -g default-terminal "tmux"
set -g default-command /usr/bin/zsh
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

#  TODOS {{{ 
#  ?Maybe modify the way new windows are opened: it is quite awkward to have different mappings on prefix-v and alt-v. 
#  Add visual hints in the status bar for when leader has been pressed, and/or for copy mode

# If pane-swapping could have similar shortcuts in tmux and i3 it would be awesome.
# Use alt-arrows to do something interesting, maybe pane resizing? (alt-arrow for a lot, arrow for a little?)
# }}}

# Leader (alt-space) {{{
unbind C-b
#C-a
#set -g prefix C-a
#bind C-a send-prefix
set -g prefix M-Space
bind M-Space send-prefix
# }}}

# Panes control{{{ 

# Splitting panes
bind-key v split-window -h
bind-key s split-window -v

# Switching panes 
bind -n M-h select-pane -L
bind -n M-j select-pane -D 
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Sending pane to window using window number
bind -n M-1 join-pane -t :1
bind -n M-2 join-pane -t :2
bind -n M-3 join-pane -t :3
bind -n M-4 join-pane -t :4
bind -n M-5 join-pane -t :5
bind -n M-6 join-pane -t :6
bind -n M-7 join-pane -t :7
bind -n M-8 join-pane -t :8
bind -n M-9 join-pane -t :9
bind -n M-0 join-pane -t :0

# Joining a window i3 style (alt+ number, no need to press maj.
bind -n M-& select-window -t 1
bind -n C-S-2 select-window -t 2
bind -n C-O select-window -t 2
bind -n M-'"' select-window -t 3
bind -n M-"'" select-window -t 4
bind -n M-( select-window -t 5
bind -n M-- select-window -t 6
bind -n C-7 select-window -t 7
bind -n M-_ select-window -t 8
bind -n C-9 select-window -t 9
#--- Hack to bypass the fact that only one byte utf-8 symbols are supported 
#bind -n M-é select-window -t 2 # Doesn't work
# This doesn't work either with a meta key.
#bind-key -r 0xC3 display 'c3 prefix binding'
#bind-key -r 0xA9 split-window -h
# An other idea could be to remap M-é at the terminal level to send other key codes, that we could catch in tmux...

# Zoom
unbind M-f
bind-key -n M-f resize-pane -Z

# Moving widows around. The two blocks are kind of redundant, you can use the second block to do something else.
# It could still be a "little" interesting in the scenarion where you have many splits and can benefit from the sticky 
# configuration (no modifier/shift) but it's only interesting if you have to chain movements a lot which for now you are not.
bind -n M-H swap-pane -s {left-of}
bind -n M-J swap-pane -s {down-of}
bind -n M-K swap-pane -s {up-of}
bind -n M-L swap-pane -s {right-of}

bind -r h swap-pane -s {left-of}
bind -r j swap-pane -s {down-of}
bind -r k swap-pane -s {up-of}
bind -r l swap-pane -s {right-of}

# Resising panes by 5 pix.
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5

# Resising panes by 1 pix
bind-key -r M-j resize-pane -D
bind-key -r M-k resize-pane -U
bind-key -r M-h resize-pane -L
bind-key -r M-l resize-pane -R

# Use Alt-arrow keys without prefix key to switch panes
#bind -n M-Left select-pane -L
#bind -n M-Right select-pane -R
#bind -n M-Up select-pane -U
#bind -n M-Down select-pane -D


# }}}

# "Copy/Visual" mode {{{ 

# NOTE use of system clipboard:
# VIM: y in vim copies to copy buffer AND un-named buffer thanks to set clipboard^=unamed.
#      An other option is to keep using <Leader>y bindings with * (or +?) buffers. 
# tmux copy in copy mode copies to clipboard thanks to plugin tmux-yank
# Pasting uses the system clipboard thanks to "xsel --clipboard"  mapping on M-p (see below)
bind-key -n M-v copy-mode  
# Yank
# bind-key -t vi-copy 'y' copy-selection  # TODO finish setting up.
# bind-key -t vi-copy 'v' begin-selection  # TODO finish setting up.
# bind-key -t vi-copy 'v' begin-selection  # TODO finish setting up.
# bind-key -t vi-copy 'V' rectangle-toggle # TODO finish setting up.
# Paste
# bind-key -n M-p paste-buffer # Does not paste from system clipboard.
# Bindings with and without trimming!
bind-key -n M-p run-shell "xsel --clipboard | tmux load-buffer - ; tmux paste-buffer "
bind-key -n M-P run-shell "xsel --clipboard | tr -d '\n' | tmux load-buffer - ; tmux paste-buffer "

# }}}

# Opening windows (not functional){{{
#unbind-key -n 1
#bind & select-window -t :1
#bind é select-window -t :1

# }}}

# Vim-tmux integration: {{{
# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# smart pane switching with awareness of vim splits                             
bind -n M-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n M-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
bind-key -T copy-mode-vi M-\ select-pane -l
# }}}

# Sane defaults {{{

# Starting at 1 is more convenient
set -g base-index 1
# Automatically set window title
#set-window-option -g automatic-rename on
set-option -g set-titles on
#set -g default-terminal xterm-256color
set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 10000
setw -g mode-keys vi
#set -g mouse-utf8 on
set -g mouse off
#set mouse-utf8 off
#setw -g mode-mouse on
setw -g monitor-activity on
# No delay for escape key press
set -sg escape-time 0
# Make sure vim and tmux use the same type of terminal (so same key-strokes)
set-option -gw xterm-keys on

# }}}

# Windows control {{{
# Renaming window: leader [,] default is satisfactory for now.
# Classical commands, equivalents without leader
bind -n M-c new-window
bind -n M-n next-window
bind -n M-N previous-window

# Classical commands but sticky
bind -r n next-window
bind -r N previous-window
bind -r p previous-window

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Joining a window i3 style (alt+ number, no need to press maj.
# Keys that are buggy because they are two-bytes (accentuated letters) and not supported by tmux,
# are bound to corresponding FN[X] keys, and i3 is in charge of redirecting M-[X] to M-F[X]
bind -n M-& select-window -t 1
bind -n M-F2 select-window -t 2
bind -n M-'"' select-window -t 3
bind -n M-"'" select-window -t 4
bind -n M-( select-window -t 5
bind -n M-- select-window -t 6
bind -n M-F7 select-window -t 7
bind -n M-_ select-window -t 8
bind -n M-F9 select-window -t 9
# }}}

#Remap a key binding for clearing the screen: C-b c-l
#bind C-l send-keys 'C-l'

unbind C-Left
unbind C-Right
# Pass keys along for window resizing. 
bind-key -n C-Right send-keys C-Right
bind-key -n C-Left send-keys C-Left
bind-key -n C-Up send-keys C-Up
bind-key -n C-Down send-keys C-Down


# Reload tmux config
bind r source-file ~/.tmux.conf

# Plugins {{{
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'

run '~/.tmux/plugins/tpm/tpm'

# Powerline
run-shell "powerline-daemon -q"
source "$HOME/miniconda3/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf"

# }}}
